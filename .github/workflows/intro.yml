name: Intro to Github Actions

env:
  VERCEL_ORG_ID: ${{ secrets.VERSEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERSEL_PROJECT_ID }}

# when does this workflow run
on:
  push:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

    #   - uses: oven-sh/setup-bun@v1
    #     with:
    #       bun-version: latest

    #   - name: Install dependencies
    #     run: bun install
      
    #   - name: Build
    #     run: bun run build

    #   - name: Run the server
    #     run: |
    #       bun run preview &
    #       sleep 5
      
    #   - name: Curl the server
    #     run: curl -I http://localhost:4173

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: pnpm install
        run: pnpm install
      
      - name: build
        run: pnpm run build
      
      - name: preview
        run: |
          pnpm run preview &
          sleep 5

      - name: Curl the server
        run: curl -I http://localhost:4173

  deploy:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install vercel cli
        run: npm i -g vercel@latest

      - name: Get vercel environnement
        run: vercel pull --yes --token=${{ secrets.VERSEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERSEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERSEL_TOKEN }}